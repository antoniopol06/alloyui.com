---
title: Example
layout: default
---

<div class="banner page-banner">
  <div class="container">
    <div class="presentation">
      <h2 id="headerEditable">Example</h2>
    </div>
  </div>
</div>

<section id="page-example">
    <div class="popover top sample-hint" id="sampleHint">
        <div class="arrow"></div>
        <div class="popover-content">
            <p>Just click inside the content below and start typing.</p>
        </div>
    </div>

    <div class="container" id="contentEditable" contenteditable="true" data-placeholder="Write content here">
        <h1>
            AlloyEditor is a WYSIWYG Editor built on top of CKEditor<br>By <a href="http://www.liferay.com">Liferay</a>
        </h1>

        <h2>Editing the content on the fly</h2>
        <p id="hintTarget">Yes, you can edit this content <strong>right here and right now</strong>. Just select some text and the toolbar for styling will appear. Not only it will appear, but it will appear where you <strong>expect it</strong>; where you released the mouse. However, if you do it using your keyboard, the toolbar will be positioned right in the middle of the selection.</p>

        <img width="527" height="165" src="<%= @getAssetsUrl() %>/img/overview.png">

        <hr>
        <h2>Paste content</h2>
        <p>You can also paste content <em>directly</em> from the web! In most cases, it will work out of the box.</p>

        <hr>
        <h2>Drag&Drop images</h2>
        <p>Want to <strong>Drag&Drop</strong> images from your Desktop directly to the editor? Nothing easier than this. Try now right here (but keep in mind this requires IE10+, Chrome, Firefox or Safari).</p>

        <hr>
        <h2>
            Styling content
            <img width="350" src="<%= @getAssetsUrl() %>/img/style.png" style="float: right;">
        </h2>
        <p>Currently we have the following available buttons to apply styles to content:</p>
        <ul>
            <li>Custom Styles <small><em>(enabled by default)</em></small></li>
            <li>Bold <small><em>(enabled by default)</em></small></li>
            <li>Italic <small><em>(enabled by default)</em></small></li>
            <li>Underline <small><em>(enabled by default)</em></small></li>
            <li>Code</li>
            <li>Heading Level 1</li>
            <li>Heading Level 2</li>
            <li>Lists</li>
            <li>Paragraph alignment</li>
            <li>Quote</li>
            <li>Strike</li>
            <li>Subscript</li>
            <li>Superscript</li>
            <li>Remove Format</li>
            <li>Marquee <strong>*</strong></li>
        </ul>

        <p class="headingsNote">
            <sup>*</sup>
            <em>Note that the button for Marquee has been added especially for this demo! Check the implementation below... you wouldn't believe how easy it was!
            </em>
        </p>

        <hr>
        <h2>
            Adding content
            <img width="350" src="<%= @getAssetsUrl() %>/img/add.png" style="float: right;">
        </h2>
        <p>Editing is good, but what about adding content? Well, right now you can:
            <ul>
                <li>Add links <em>(enabled by default)</em></li>
                <li>Add Twitter links <em>(enabled by default)</em></li>
                <li>Insert images <em>(enabled by default)</em></li>
                <li>Capture pictures</li>
                <li>Insert Horizontal lines <em>(enabled by default)</em></li>
                <li>Insert Tables <em>(enabled by default)</em></li>
            </ul>
        </p>

        <hr>
        <h2>Browser support</h2>
        <p>AlloyEditor runs on IE9+, Chrome, Firefox and Safari.</p>

        <hr>
        <h2>Want to help us?</h2>
        <p>We are not ready yet. There is more work to do and if you are developer, you are welcome to contribute code. We need to create more buttons, more toolbars, and why not to create another UI layer, not based on React?</p>

        <p>If you want to use the editor, go ahead. However, don't forget to send us some feedback. That's everything we need!</p>
    </div>

    <div class="container">
        <p id="addNewButton">P.S. Do you know that the Marquee button, which you probably used to have fun with the demo was especially added for this page? It does not exist as a default button in AlloyEditor. However, adding a new button is extremely easy. Here is the code for it:</p>

        <div id="h4CodeContainer" class="container">
        <pre><code>var ButtonMarquee = React.createClass({
    mixins: [AlloyEditor.ButtonStyle, AlloyEditor.ButtonStateClasses, AlloyEditor.ButtonActionStyle],

    propTypes: {
        editor: React.PropTypes.object.isRequired
    },

    getDefaultProps: function() {
        return {
            style: {
                element: 'marquee'
            }
        };
    },

    statics: {
        key: 'marquee'
    },

    render: function() {
        var cssClass = 'alloy-editor-button ' + this.getStateClasses();

        return (
            <button className={cssClass} data-type="button-marquee" onClick={this.applyStyle} tabIndex={this.props.tabIndex}>
                <span className="alloy-editor-icon-separator"></span>
            </button>
        );
    }
});

AlloyEditor.Buttons[ButtonMarquee.key] = AlloyEditor.ButtonMarquee = ButtonMarquee;</code></pre>

    <p>And then we used it just like this:</p>

    <pre><code>AlloyEditor.Selections[2].buttons.push('marquee');

AlloyEditor.editable('contentEditable');</code></pre>
        </div>
    </div>

    <div class="container">
        <div id="disqus_thread"></div>
        <script type="text/javascript">
            /* * * CONFIGURATION VARIABLES: EDIT BEFORE PASTING INTO YOUR WEBPAGE * * */
            var disqus_shortname = 'alloyeditor'; // required: replace example with your forum shortname

            /* * * DON'T EDIT BELOW THIS LINE * * */
            (function() {
                var dsq = document.createElement('script'); dsq.type = 'text/javascript'; dsq.async = true;
                dsq.src = '//' + disqus_shortname + '.disqus.com/embed.js';
                (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);
            })();
        </script>
        <noscript>Please enable JavaScript to view the <a href="http://disqus.com/?ref_noscript">comments powered by Disqus.</a></noscript>
        <a href="http://disqus.com" class="dsq-brlink">comments powered by <span class="logo-disqus">Disqus</span></a>
    </div>
</section>

<link href="<%= @getAssetsUrl() %>/js/alloy-editor/assets/alloy-editor-ocean.css" rel="stylesheet">

<script src="<%= @getAssetsUrl() %>/js/alloy-editor/alloy-editor-all-min.js"></script>

<script>
    var ButtonMarquee = React.createClass({
        mixins: [AlloyEditor.ButtonStyle, AlloyEditor.ButtonStateClasses, AlloyEditor.ButtonActionStyle],

        displayName: 'ButtonMarquee',

        propTypes: {
            editor: React.PropTypes.object.isRequired
        },

        getDefaultProps: function() {
            return {
                style: {
                    element: 'marquee'
                }
            };
        },

        statics: {
            key: 'marquee'
        },

        render: function() {
            var cssClass = 'alloy-editor-button ' + this.getStateClasses();

            return (
                React.createElement(
                    'button',
                    {
                        className: cssClass,
                        'data-type': 'button-marquee',
                        onClick: this.applyStyle,
                        tabIndex: this.props.tabIndex
                    },
                    React.createElement(
                        'span',
                        {
                            className: 'alloy-editor-icon-separator'
                        }
                    )
                )
            );
        }
    });

    AlloyEditor.Buttons[ButtonMarquee.key] = AlloyEditor.ButtonMarquee = ButtonMarquee;
</script>

<script>
    var contentEditable = document.getElementById('contentEditable');

    var destroyPopover = function() {
        document.getElementById('sampleHint').remove();
        contentEditable.removeEventListener('focus', destroyPopover);
    };

    contentEditable.addEventListener('focus', destroyPopover);

    AlloyEditor.Selections[2].buttons.push('marquee');

    AlloyEditor.editable('contentEditable', {});
</script>