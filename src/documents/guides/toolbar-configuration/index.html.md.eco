---
category: Guide
description: AlloyEditor allows you to configure the Toolbars in the way you prefer. You will be able to remove some of the existing Toolbars, to add your own or to reorder the buttons in each Toolbar
target: user
layout: single-doc
order: 2
tags: toolbar
title: Toolbar configuration
type: general
---

#### Default toolbar configuration

The defalt toolbars configuration in editor is as follows:

````javascript
var toolbars = {
    add: {
        buttons: ['image', 'camera', 'hline', 'table'],
        tabIndex: 2
    },
    styles: {
        selections: AlloyEditor.Selections,
        tabIndex: 1
    }
};
````

where <code>AlloyEditor.Selections</code> is:

````javascript
var Selections = [{
        name: 'link',
        buttons: ['linkEdit'],
        test: AlloyEditor.SelectionTest.link
    }, {
        name: 'image',
        buttons: ['imageLeft', 'imageRight'],
        test: AlloyEditor.SelectionTest.image
    }, {
        name: 'text',
        buttons: ['styles', 'bold', 'italic', 'underline', 'link', 'twitter'],
        test: AlloyEditor.SelectionTest.text
    }, {
        name: 'table',
        buttons: ['tableRow', 'tableColumn', 'tableCell', 'tableRemove'],
        getArrowBoxClasses: AlloyEditor.SelectionGetArrowBoxClasses.table,
        setPosition: AlloyEditor.SelectionSetPosition.table,
        test: AlloyEditor.SelectionTest.table
}];
````

The configuration above represents two toolbars - for adding content (images, code, etc.) and modify content based on the current selection type. You may remove any of those and the toolbar won't be shown.

So, if you want to remove the toolbar for adding content, just **remove** the property "add" from the object above:

````javascript
var toolbars = {
    styles: {
        selections: AlloyEditor.Selections,
        tabIndex: 1
    }
};
````

#### Configuring a Button

In the default UI, which uses React, some of the buttons accept configuration parameters so you can tailor them to suit your needs.

Here is an example how can you pass attributes to the Styles button for a text selection:

````javascript
var Selections = [{
    name: 'text',
    buttons: [
        {
            name: 'styles',
            cfg: {
                styles: [...]
            }
        },
        'bold', 'italic', 'underline', 'link', 'twitter'],
    test: AlloyEditor.SelectionTest.text
}];
````

In this case a different array of styles is passed to the Styles button, so they will show when selecting a text instead of the default ones.

#### Reordering Buttons in a Toolbar

If you are not happy with the order of the buttons, you can just reorder them in the toolbar configuration. They will follow the order in which you specify them. For example, if you want the "table" button to appear before the "hline" button in the Add toolbar, you just need to do the following:

````javascript
var toolbars = {
    add: {
        buttons: ['table', 'hline', image', 'camera'],
        tabIndex: 2
    }
};
````

#### Removing Buttons from a Toolbar
If you remove a button from a the buttons property of a toolbar, then this button won't be available when the toolbar is visible.